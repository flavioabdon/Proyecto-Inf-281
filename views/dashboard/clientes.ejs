<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Clientes</title>
    <!-- CSS de Bootstrap -->
    <!--<link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
    <!-- DataTables CSS -->
    <!--<link rel="stylesheet" href="https://cdn.datatables.net/1.10.21/css/jquery.dataTables.min.css">-->
    <link href="/dashboard/vendor/fontawesome-free/css/all.min.css" rel="stylesheet" type="text/css">
    <link
        href="https://fonts.googleapis.com/css?family=Nunito:200,200i,300,300i,400,400i,600,600i,700,700i,800,800i,900,900i"
        rel="stylesheet">

    <!-- Custom styles for this template-->
    <link href="/dashboard/css/sb-admin-2.min.css" rel="stylesheet">

    <!-- iconos -->
    <link href="https://cdn.lineicons.com/4.0/lineicons.css" rel="stylesheet" />

    <!-- datatables -->
    <link rel="stylesheet" href="https://cdn.datatables.net/2.0.6/css/dataTables.bootstrap5.css">
    <link rel="stylesheet" href="https://cdn.datatables.net/2.0.6/css/dataTables.dataTables.css">

    <!-- miCss -->
    <link rel="stylesheet" href="/dashboard/css/tabla.css">

</head>
<body>
<!-- Botón para abrir el modal -->
<div class="container mt-5">
    <h2>Lista de Clientes</h2>
    <table id="tablaCliente" class="table table-striped table-bordered">
        <thead>
            <tr>
                <th>#</th>
                <th>ID</th>
                <th>Nombre</th>
                <th>Apellido</th>
                <th>Email</th>
                <th>Celular</th>
                <th>CI</th>
                <th>Sexo</th>
                <th>Foto</th>
                <th>Fecha de Creación</th>
                <th>Fecha de Modificación</th>
                <th>Usuario Creación</th>
                <th>Usuario Modificación</th>
                <th>Dirección</th>
                <th>Longitud</th>
                <th>Latitud</th>
                <th>Estado</th>
                <th>Acciones</th>
            </tr>
        </thead>
        <tbody>
            <!-- El cuerpo de la tabla se llenará dinámicamente por DataTables -->
        </tbody>
    </table>
</div>


<!-- Modal para actualizar cliente -->
<div class="modal fade" id="modalActualizarCliente" tabindex="-1" role="dialog" aria-labelledby="modalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="modalActualizarClienteLabel">Actualizar Cliente</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <form id="formActualizarCliente">
                <div class="modal-body">
                    <input type="hidden" id="idClienteActualizar" name="idCliente">

                    <div class="form-group">
                        <label for="nombreClienteActualizar">Nombre</label>
                        <input type="text" class="form-control" id="nombreClienteActualizar" name="nombreCliente" required>
                    </div>

                    <div class="form-group">
                        <label for="apellidoClienteActualizar">Apellido</label>
                        <input type="text" class="form-control" id="apellidoClienteActualizar" name="apellidoCliente" required>
                    </div>

                    <div class="form-group">
                        <label for="emailClienteActualizar">Email</label>
                        <input type="email" class="form-control" id="emailClienteActualizar" name="emailCliente" required>
                    </div>

                    <div class="form-group">
                        <label for="celularClienteActualizar">Celular</label>
                        <input type="text" class="form-control" id="celularClienteActualizar" name="celularCliente" required>
                    </div>

                    <div class="form-group">
                        <label for="ciClienteActualizar">CI</label>
                        <input type="text" class="form-control" id="ciClienteActualizar" name="ciCliente" required>
                    </div>

                    <div class="form-group">
                        <label for="sexoClienteActualizar">Sexo</label>
                        <select class="form-control" id="sexoClienteActualizar" name="sexoCliente">
                            <option value="Masculino">Masculino</option>
                            <option value="Femenino">Femenino</option>
                        </select>
                    </div>

                    <div class="form-group">
                        <label for="fotoClienteActualizar">Foto</label>
                        <input type="text" class="form-control" id="fotoClienteActualizar" name="fotoCliente">
                    </div>

                    <div class="form-group">
                        <label for="direccionClienteActualizar">Dirección</label>
                        <input type="text" class="form-control" id="direccionClienteActualizar" name="direccionCliente" required>
                    </div>

                    <div class="form-group">
                        <label for="latitudClienteActualizar">Latitud</label>
                        <input type="text" class="form-control" id="latitudClienteActualizar" name="latitudCliente" required>
                    </div>

                    <div class="form-group">
                        <label for="longitudClienteActualizar">Longitud</label>
                        <input type="text" class="form-control" id="longitudClienteActualizar" name="longitudCliente" required>
                    </div>

                    <div class="form-group">
                        <label for="longitudClienteActualizar">Estado</label>
                        <input type="text" class="form-control" id="estado_c" name="estadoCliente" required>
                    </div>
                </div>

                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancelar</button>
                    <button type="submit" class="btn btn-primary">Actualizar</button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Scripts de jQuery, Bootstrap y DataTables -->
<script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
<script src="https://cdn.datatables.net/1.10.21/js/jquery.dataTables.min.js"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.bundle.min.js"></script>

<script>
    // Incluir la función listarClientes aquí o en un archivo JavaScript separado
    async function listarClientes() {
        try {
            const response = await fetch('/listarClientes'); // Ajusta esta URL según tu backend
            if (!response.ok) {
                throw new Error('No se pudieron cargar los datos de los clientes');
            }

            const clientes = await response.json(); // Convierte la respuesta a JSON

            // Limpiar la tabla antes de actualizar (verificar si ya está inicializada)
            if ($.fn.DataTable.isDataTable('#tablaCliente')) {
                $('#tablaCliente').DataTable().clear().destroy();
            }

            // Inicializar DataTables con los datos actualizados
            $('#tablaCliente').DataTable({
                responsive: true,
                autoWidth: true,
                data: clientes,
                columns: [
                    { data: 'numero_registro' },
                    { data: 'id_usuario' },
                    { data: 'nombre' },
                    { data: 'apellido' },
                    { data: 'email' },
                    { data: 'numero_contacto' },
                    { data: 'ci' },
                    { data: 'sexo' },
                    { data: 'fotoperf_url' },
                    { data: 'fecha_creacion' },
                    { data: 'fecha_modificacion' },
                    { data: 'usuario_creacion' },
                    { data: 'usuario_modificacion' },
                    { data: 'direccion_envio' },
                    { data: 'longitud' },
                    { data: 'latitud' },
                    {
                        data: 'estado_registro',
                        render: function (data) {
                            return data === 'activo'
                                ? '<span class="badge badge-success">Activo</span>' // Badge verde
                                : '<span class="badge badge-danger">Inactivo</span>'; // Badge rojo
                        }
                    },
                    {
                        data: null, // Sin datos directos para esta columna
                        defaultContent: `
                            <div class='text-center'>
                                <div class='btn-group'>
                                    <button title='Editar' class='btn btn-primary btn-sm btnEditar'>
                                        <i class='fas fa-edit'></i>
                                    </button>
                                    <button title='Eliminar' class='btn btn-danger btn-sm btnBorrar'>
                                        <i class='fas fa-trash-alt'></i>
                                    </button>
                                </div>
                            </div>`,
                    }
                ],
                language: {
                    "decimal": "",
                    "emptyTable": "No hay información disponible",
                    "info": "Mostrando _START_ a _END_ de _TOTAL_ registros",
                    "infoEmpty": "Mostrando 0 a 0 de 0 registros",
                    "infoFiltered": "(filtrado de _MAX_ registros totales)",
                    "lengthMenu": "Mostrar _MENU_ registros por página",
                    "loadingRecords": "Cargando...",
                    "processing": "Procesando...",
                    "search": "Buscar:",
                    "zeroRecords": "No se encontraron registros coincidentes",
                    "paginate": {
                        "first": "Primero",
                        "last": "Último",
                        "next": "Siguiente",
                        "previous": "Anterior"
                    },
                    "aria": {
                        "sortAscending": ": activar para ordenar de forma ascendente",
                        "sortDescending": ": activar para ordenar de forma descendente"
                    }
                },
                order: [[0, 'desc']],
                columnDefs: [
                    {
                        targets: [1], // Puedes ocultar la columna de ID si es necesario
                        visible: false // Cambia a false si deseas ocultar
                    },
                    {
                        targets: [0, 4, 5, 6], // Cambia los índices según las columnas que deseas centrar
                        className: 'text-center' // Añade la clase para centrar
                    }
                ]
            });
        } catch (error) {
            console.error('Error al cargar los clientes:', error); // Manejo de errores
        }
    }

    // Ejecutar la función cuando el documento esté listo
    $(document).ready(function () {
        listarClientes(); // Llamar a la función para cargar los datos
    });
</script>
<script>
    document.getElementById('tablaCliente').addEventListener('click', function (event) {
    const btnEditar = event.target.closest('.btnEditar');

    if (btnEditar) {
        // Obtener la fila (tr) más cercana al botón de editar
        const fila = $(btnEditar).closest('tr');

        // Obtener los datos de la categoría de la fila usando la API del DataTable
        const clienteData = $('#tablaCliente').DataTable().row(fila).data();

        // Comprobar si se obtuvo correctamente la categoría
        if (clienteData) {
            // Llenar el modal de actualización con los datos de la categoría
            document.getElementById('idClienteActualizar').value = clienteData.id_usuario;
            document.getElementById('nombreClienteActualizar').value = clienteData.nombre;
            document.getElementById('apellidoClienteActualizar').value = clienteData.apellido;
            document.getElementById('emailClienteActualizar').value = clienteData.email;
            document.getElementById('celularClienteActualizar').value = clienteData.numero_contacto;
            document.getElementById('ciClienteActualizar').value = clienteData.ci;
            document.getElementById('sexoClienteActualizar').value = clienteData.sexo;
            document.getElementById('fotoClienteActualizar').value = clienteData.fotoperf_url;
            document.getElementById('direccionClienteActualizar').value = clienteData.direccion_envio;
            document.getElementById('longitudClienteActualizar').value = clienteData.longitud;
            document.getElementById('latitudClienteActualizar').value = clienteData.latitud;
            document.getElementById('estado_c').value = clienteData.estado_registro;

            // Mostrar el modal de actualización
            $('#modalActualizarCliente').modal('show');
        } else {
            console.error('No se pudo obtener los datos del cliente.');
        }
    }
});

</script>
<script>
    document.getElementById('formActualizarCliente').addEventListener('submit', function (event) {
    event.preventDefault();
    
    
    const idCliente = document.getElementById('idClienteActualizar').value;
    const nombreCliente = document.getElementById('nombreClienteActualizar').value;
    const apellidoCliente = document.getElementById('apellidoClienteActualizar').value;
    const emailCliente = document.getElementById('emailClienteActualizar').value;
    const celularCliente = document.getElementById('celularClienteActualizar').value;
    const ciCliente = document.getElementById('ciClienteActualizar').value;
    const sexoCliente = document.getElementById('sexoClienteActualizar').value;
    const fotoCliente = document.getElementById('fotoClienteActualizar').value;
    const direccionCliente = document.getElementById('direccionClienteActualizar').value;
    const estadoCliente = document.getElementById('estado_c').value;
    const longitud = document.getElementById('longitudClienteActualizar').value;
    const latitud = document.getElementById('latitudClienteActualizar').value;

    const datosCliente = {
        nombreCliente: nombreCliente,
        apellidoCliente: apellidoCliente,
        emailCliente: emailCliente,
        celularCliente: celularCliente,
        ciCliente: ciCliente,
        sexoCliente: sexoCliente,
        fotoCliente: fotoCliente,
        direccionCliente: direccionCliente,
        estadoCliente: estadoCliente,
        latitud: latitud,
        longitud: longitud
    };

    // Mostrar los datos en la consola en formato JSON
    console.log('Datos que se están enviando:', JSON.stringify(datosCliente, null, 2));



    // Realizar la petición para actualizar la categoría
    fetch(`/cliente/${idCliente}`, {
        method: 'PUT',
        headers: {
            'Content-Type': 'application/json'
        },
        body: JSON.stringify({
            nombreCliente:nombreCliente,
            apellidoCliente:apellidoCliente,
            emailCliente:emailCliente,
            celularCliente:celularCliente,
            ciCliente:ciCliente,
            sexoCliente:sexoCliente,
            fotoCliente:fotoCliente,
            direccionCliente:direccionCliente,
            latitud:latitud,
            longitud:longitud,
            estadoCliente:estadoCliente
        })
    })
        .then(response => {
            if (!response.ok) {
                throw new Error('Ocurrió un error al actualizar el cliente');
            }
            return response.json();
        })
        .then(data => {
            // Mostrar una alerta de éxito con SweetAlert
            Swal.fire({
                icon: 'success',
                title: '¡Cliente actualizado!',
                text: 'El cliente ha sido actualizado correctamente.',
                confirmButtonText: 'Aceptar'
            }).then(() => {
                $('#modalActualizarCliente').modal('hide'); // Cerrar el modal
            });

            // Limpiar el formulario después de la actualización
            document.getElementById('formActualizarCliente').reset();

            listarClientes(); // Actualizar la lista de categorías
        })
        .catch(error => {
            // Mostrar una alerta de error con SweetAlert
            Swal.fire({
                icon: 'error',
                title: 'Error',
                text: error.message || 'Ocurrió un error al actualizar el cliente',
                confirmButtonText: 'Aceptar'
            });
            console.error('Error al actualizar el cliente:', error);
        });
});
</script>
<!--<script src="/dashboard/jsCliente/CRUDcliente.js"></script>-->

<!-- sweetalert2 -->
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>


</body>
</html>